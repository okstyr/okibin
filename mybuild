#!/bin/bash -e

# helps building a project into a docker image for my own use
# originally built for parent/child images but now works for all my dockers
# if file name starts with '${USER}-' this will be stripped to create tag
# combined with a global git ignore for ${USER}-* should be perfectly safe (tm)
# also deletes trailing '.dockerfile' for obvious reasons

mode=`basename $0`

prefix="${USER}-"
image_namespace="$USER"
file_name=${1?need a filename}

default_namespace=$(basename $(dirname $PWD))-$(basename $PWD)

stripped=$(echo $file_name|sed "s/^$prefix\(.*\)/\1/")
name=$(echo $stripped|sed -n "s/\(.*\)\.dockerfile$/\1/p")
version=$(date +%F_%H-%M-%S)

if [[ -z $name ]] ; then
  name=$default_namespace
fi

if [[ ! -e $file_name ]]; then
  if [[ "$mode" == "mybuild" ]] ; then
    echo "no such file as '$file_name'"
    exit 1
  else
    # either myload or mymount
    if ! docker images|grep -q "\b$file_name\b" ; then
      echo "no such image as '$file_name'"
      exit 1
    fi
    name=$file_name
    echo $name
  fi
fi

container_name="${image_namespace}-${name}"
image_name=${image_namespace}/${name:?oops \'${file_name}\' looks wrong}

#echo "
#pwd $default_namespace
#stripp $stripped
#name $name
#ver $version
#cont $container_name
#image $image_name
#"

mount_param=
if [[ `basename $0` == "mymount" ]]; then
  target_bit=
  if [[ -e $(pwd)/target ]] ; then
    # make a off-home-fs location for target because docker/encrypted_fs/scala
    temp_target=/tmp/target_$container_name # this should be okay - but i might need to unique-ify it - beter still, fold $(pwd) into container name
    mkdir -p $temp_target
    target_bit="-v $temp_target:/home/hostuser/target"
  fi
  # old mount just for hystorical reasons
  # mount_param="-v $(pwd):/root"
  # hostuser and (possibly) target mounts
  mount_param="-v $(pwd):/home/hostuser $target_bit"
fi

if [[ "$mode" == "mylaunch" || `basename $0` == "mymount" ]]; then
  # this way i can launch just by tab-completing the file name :)
  docker rm -f $container_name || true
  echo docker run -it $mount_param --name $container_name ${image_namespace}/${name} bash
  docker run -it $mount_param --name $container_name ${image_namespace}/${name} bash
else
  echo "building ${image_name}"
  docker build -t ${image_name} -f ${file_name} .
  docker tag ${image_name} ${image_name}:${version}
fi

