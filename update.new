#!/bin/bash
# run an update and log it all, leaving only the important stuff on the screen
source ~/okibin/colors

export now=$(date +%F_%T)
export root_path="$HOME/projects"
export log_path="$root_path/update_logs"

mkdir -p $log_path
export log_name="$log_path/$now"

echo "writing to $log_name"

for i in $(ls -d $root_path/*/*|grep -v $log_path)
do
  if [[ -e "$i/.git" ]] ; then
    echo "======== git pulling $i" | tee -a $log_name
    cd $i 
    branch=`git branch|grep '\*'|grep -v '\* master'`
    if [[ -n "$branch" ]]
    then
      branches="$branches$i $branch\n"
    fi
    export output=`git pull 2>&1 | tee -a $log_name`
    export goodOutput=`echo "$output"|egrep 'files? changed|Already up-to-date'`
    if [[ -n "$goodOutput" ]]
    then
      echo -e "${GREEN}SUCCESS"
      echo -e "${goodOutput}${CSET}"
    else
      echo -e "${RED}FAIL"
      echo -e "${output}${CSET}"
      errorRepos="$errorRepos\n$i"
    fi
  else
    echo -e "${BROWN}$i is not a git repo - ignoring${CSET}"
    echo "$i is not a git repo - ignoring">> $log_name
  fi
done

echo "========================================"
if [[ -n "$branches" ]]
then
    echo -e "These repos are not on master"
    echo -e "$branches"|sed -e "s#$root_path##"
fi
if [[ -z "$errorRepos" ]]
then
    echo -e "All repos updated successfully"
else
    echo -e "There were errors in these repos $errorRepos"|sed -e "s#$root_path##"
fi


